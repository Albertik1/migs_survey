{"version":3,"sources":["localization.js","Firebase.js","helpers.js","components/BarchartQuestion/BarchartQuestion.js","components/FreeTextQuestion/FreeTextQuestion.js","components/OptionsQuestion/OptionsQuestion.js","components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["translateNumber","number","digits","toString","split","map","d","join","replaceMMNumbers","s","lookup","translateString","l","sen","toLowerCase","trim","smm","Rabbit","uni2zg","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","make2digit","num","BarchartQuestion","props","getNewArray","oldArray","newArray","forEach","push","calcTotalPoints","options","_","sumBy","calcMaxPoints","remainingPoints","state","maxPoint","max","points","Math","ceil","calcRemainingPoints","newTotalPoints","totalPoints","changeOptions","optionId","delta","id","setState","maxPoints","submitAnswer","questionNumber","questionText","changeUnableToAnswer","event","unableToAnswer","target","checked","resetButton","console","log","initialOptions","question","answer","answerSimplified","a","pick","optionText","submit","validAnswer","isButtonDisabled","find","barChartBar","caption","width","totalVal","filteredVal","maxVal","l10n","className","height","x","y","barheight","this","isLoading","length","questionWidth","disabled","onClick","bind","type","onChange","defaultChecked","Component","defaultProps","FreeTextQuestion","value","handleChange","OptionsQuestion","optionsForSelect","opt","customStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","maxWidth","AllQuestions","calcQuestionWidthFunc","questionWidthScaleFactor","calcQuestionWidth","allowOther","React","App","languageOptions","label","getDataForExport","ref","onSnapshot","Promise","all","docs","doc","then","result","submissionsToday","filter","submission","date","Date","getMilliseconds","moment","startOf","format","exportData","submissionsTotalToday","afterCoolDown","startQuestionnare","renderer","hours","minutes","seconds","completed","returnString","Array","isArray","Number","isInteger","l10nMain","selectedLanguage","answers","answerMMNumReplaced","handleLanguageChange","selectedOption","Object","values","reduce","isStillTrue","next","getAnswersOnly","questions","keys","newAnswers","q","submitQuestionnare","_startTime","_startTimeString","_submitTime","_submitTimeString","_appLastUpdated","updatePendingSubmissions","pendingSubmissions","submissionKey","answering","add","docRef","get","updateSubmissionIds","submissionIds","startTimeOfSubmission","toDate","alert","catch","error","JSON","stringify","firstLoad","enablePersistence","err","code","collection","unsubscribe","dimensions","window","innerHeight","innerWidth","queriedData","queriedDataLastFetched","queriedDataFromCache","queriedDataPendingWrites","submitRetries","maxSubmitRetries","submitting","updateDimensions","addEventListener","includeMetadataChanges","snapshot","returnData","metadata","hasPendingWrites","fromCache","min","filename","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+WAuBMA,EAAkB,SAACC,GACvB,IAAIC,EAASD,EAAOE,WAAWC,MAAM,IA6BrC,OAFAF,GA1BAA,EAASA,EAAOG,KAAI,SAAAC,GAClB,OAAOA,GACL,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,SACT,QACE,OAAOA,OAGGC,KAAK,KAKVC,EAAmB,SAACC,GAY/B,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAIA,EAAEN,YACAC,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAChBH,MAAM,UAAKG,KAAK,MAIlBG,EAES,CACX,OAAQ,iBACR,OAAQ,iBACR,kEAAmE,sPACnE,YAAe,uCACf,KAAQ,iCACR,MAAS,2BACT,SAAY,6CACZ,IAAO,2BACP,gBAAiB,yDACjB,mBAAoB,6CAEpB,qDAAsD,sZACtD,QAAW,mDACX,SAAY,+DACZ,MAAS,qBACT,MAAS,2BACT,IAAO,eACP,KAAQ,2BACR,KAAQ,6CACR,OAAU,uCACV,UAAa,mDACb,QAAW,+DACX,SAAY,mDACZ,SAAY,6CACZ,SAAY,mDACZ,MAAS,iFACT,2BAA2B,6JAC3B,oBAAoB,2HACpB,oBAAoB,oIACpB,KAAO,2BACP,OAAS,SACT,iBAAiB,uCACjB,sDAAsD,kLACtD,KAAO,uFACP,eAAe,6EACf,eAAe,8CACf,mDAAmD,gGACnD,6BAA6B,4EAC7B,+BAA+B,sEAC/B,WAAa,2BACb,OAAS,qBACT,gBAAgB,6CAChB,iBAAiB,+GACjB,4BAA4B,6OAC5B,cAAc,+DACd,kBAAa,iCACb,+BAA+B,qHAC/B,6BAA6B,2JAC7B,qBAAqB,+LACrB,QAAU,gEACV,yCAAyC,uNACzC,0BAA0B,2EAC1B,yBAAyB,2KACzB,SAAW,yDACX,UAAY,mDACZ,OAAS,uCACT,MAAQ,uCACR,QAAU,qEACV,iBAAiB,2EACjB,cAAc,6CACd,6DAA6D,oOAC7D,yBAAyB,gEACzB,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,eAAe,kCACf,gBAAgB,wCAChB,yBAAoB,iCACpB,sBAAsB,mDACtB,2BAA2B,uIAC3B,2DAA2D,qUAC3D,4BAA4B,0FAC5B,8BAA8B,qLAC9B,eAAe,kEACf,yBAAyB,4JACzB,iCAAiC,kKACjC,kBAAkB,sGAClB,wBAAwB,8EACxB,wBAAwB,uJACxB,qBAAqB,yHACrB,0CAA0C,8MAC1C,qBAAqB,8HACrB,aAAa,gDACb,2GAA2G,0nBAC3G,iCAAiC,uLACjC,IAAM,6FACN,GAAK,iFACL,sDAAsD,oZACtD,cAAc,mGACd,iBAAiB,wFACjB,UAAa,+DACb,gBAAiB,mGACjB,2BAA6B,wIAC7B,iCAAkC,sHAClC,mBAAqB,yDACrB,kBAAoB,6CACpB,6DAA6D,8WAC7D,4DAA4D,0XAC5D,gFAAgF,0XAChF,uEAAuE,ggBACvE,yBAAyB,8IACzB,uBAAuB,qHACvB,sBAAsB,8IACtB,yBAAyB,iIACzB,QAAU,yDACV,UAAY,uCACZ,wCAAwC,yOACxC,oBAAoB,uIACpB,eAAe,yDACf,2BAA2B,+MAC3B,aAAe,2EACf,YAAc,mDACd,0BAA0B,qKAC1B,iBAAiB,mLACjB,MAAQ,qEACR,eAAe,8HACf,QAAW,6CACX,kBAAmB,mGACnB,QAAW,qEACX,kBAAmB,2HACnB,wBAAyB,+JACzB,2BAA4B,mMAC5B,WAAc,qHACd,iBAAkB,kOAClB,mBAAoB,qEACpB,mDAAoD,sUACpD,gHAAiH,srBACjH,wBAAyB,0TACzB,2CAA4C,gRAC5C,kBAAmB,0DACnB,0BAA2B,wHAC3B,2BAA4B,0IAC5B,iLAAkL,i1BAClL,cAAe,mOACf,IAAO,oDACP,MAAS,oDACT,KAAQ,8CACR,eAAgB,sGAChB,2EAA4E,8dAC5E,qEAAsE,mWACtE,0EAA2E,kSAC3E,gQAAiQ,2wDACjQ,gBAAiB,kIACjB,qCAAsC,uSACtC,6GAA8G,qnBAC9G,wHAAyH,4oCACzH,+HAAgI,05BAChI,iLAAkL,y1CAClL,4FAA6F,yoBAC7F,2EAA4E,wlBAC5E,4HAA6H,uxBAC7H,6GAA8G,2mBAC9G,8CAA+C,+TAC/C,6BAA8B,2JAC9B,uCAAwC,oPACxC,yCAA0C,0UAMxCC,EAAkB,SAACF,EAAEG,GACzB,IAAIC,EAAMJ,EAAEK,cAEZD,GADAA,EAAKA,EAAIT,MAAM,KAAK,GAAKS,EAAIT,MAAM,KAAK,GAAKS,GACnCE,OAIV,IAAIC,EAAM,GAQV,MAPU,OAANJ,EACFI,EAAMN,EAAOG,GAAOH,EAAOG,GAAOJ,EAClB,OAANG,IAEVI,EAAMN,EAAOG,GAAOI,IAAOC,OAAOR,EAAOG,IAAQJ,GAG5CO,G,QC/OTG,IAASC,cARM,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,sCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,iBAIrBP,IAASQ,YAAYC,SAZJ,IAcFT,QAAf,E,iECnBaU,EAAa,SAACC,GACzB,OAAIA,GAAO,GACFA,EAAI3B,WAEJ,IAAM2B,EAAI3B,Y,OCEf4B,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA+BRC,YAAc,SAACC,GACb,IAAIC,EAAW,GAEf,OADAD,EAASE,SAAQ,SAAA9B,GAAC,OAAI6B,EAASE,KAAT,eAAkB/B,OACjC6B,GAnCU,EAsCnBG,gBAAkB,SAACC,GACjB,OAAOC,IAAEC,MAAMF,EAAS,WAvCP,EA0CnBG,cAAgB,SAACH,EAAQI,GACvBA,EAAkBA,GAAoC,EAAKC,MAAMD,gBACjE,IAAME,EAAWC,YAAI,GAAD,mBAAKP,EAAQlC,KAAI,SAAAC,GAAC,OAAIA,EAAEyC,WAAxB,CAAiCJ,KACrD,OAA8B,GAAvBK,KAAKC,KAAKJ,EAAS,KA7CT,EAgDnBK,oBAAsB,SAACX,GACrB,IAAMY,EAAiB,EAAKb,gBAAgBC,GAE5C,OADwB,EAAKK,MAAMQ,YAAcD,GAlDhC,EAsDnBE,cAAgB,SAACC,EAASC,GACxB,IAAIhB,EAAU,EAAKK,MAAML,QACzBA,EAAQH,SAAQ,SAAA9B,GACVA,EAAEkD,KAAOF,IAAUhD,EAAEyC,QAAUQ,MAGrC,IAAMZ,EAAkB,EAAKO,oBAAoBX,GACjD,EAAKkB,SAAS,CACZlB,QAASA,EACTI,gBAAiBA,EACjBe,UAAW,EAAKhB,cAAcH,EAAQI,KAGxC,EAAKgB,aACF9B,EAAW,EAAKe,MAAMgB,gBAAkB,MAAQ,EAAKhB,MAAMiB,aAC5DtB,EACAI,IAtEe,EA2EnBmB,qBAAuB,SAACC,GAEtB,IAAMC,EAAiBD,EAAME,OAAOC,QACpC,EAAKT,SAAS,CAACO,eAAgBA,IAC/B,IAAMzB,EAAU,EAAKK,MAAML,QACrBI,EAAkB,EAAKO,oBAAoBX,GAGjD,EAAKoB,aACF9B,EAAW,EAAKe,MAAMgB,gBAAkB,MAAQ,EAAKhB,MAAMiB,aAC5DtB,EACAI,EACAqB,IAvFe,EA2FnBG,YAAc,WACZC,QAAQC,IAAI,SACZ,IAAM1B,EAAkB,EAAKO,oBAAoB,EAAKN,MAAM0B,gBAC5D,EAAKb,SAAS,CACZlB,QAAS,EAAKN,YAAY,EAAKW,MAAM0B,gBACrC3B,gBAAiBA,EACjBe,UAAW,EAAKhB,cAAc,EAAKE,MAAM0B,eAAe3B,KAG1D,EAAKgB,aACF9B,EAAW,EAAKe,MAAMgB,gBAAmB,MAAQ,EAAKhB,MAAMiB,aAC7D,EAAKjB,MAAM0B,eACX3B,IAvGe,EA2GnBgB,aAAe,SAACY,EAASC,EAAO7B,EAAgBqB,GAC9C,IAAMS,EAAmBD,EAAOnE,KAAI,SAAAqE,GAAC,OAAIlC,IAAEmC,KAAKD,EAAG,CAAC,aAAc,cAElEV,EAA6C,qBAAnBA,GAAqD,OAAnBA,EACxD,EAAKpB,MAAMoB,eACXA,EAEJS,EAAiBpC,KAAK,CACpBuC,WAAY,mBACZ7B,OAAQiB,IAEV,EAAKhC,MAAM6C,OAAO,CAChBN,SAAUA,EACVC,OAAQC,EACRK,YAAiC,IAApBnC,KAzHE,EA6HnBoC,iBAAmB,SAACzB,EAASC,GAC3B,IAAIhB,EAAU,EAAKK,MAAML,QAGzB,OAFuBC,IAAEwC,KAAKzC,EAAS,CAAC,KAAMe,IAE3BP,OAASQ,EAAQ,GAChCA,EAAQ,EAAKX,MAAMD,iBAlIN,EAwInBsC,YAAc,SAACC,EAAQC,EAAMC,EAASC,EAAYC,GAChD,IAAOC,EAAQ,EAAKvD,MAAbuD,KAEP,OAAO,qBAAKC,UAAU,iBAAiBL,MAAOA,EAAOM,OADnC,GACX,SACL,8BACE,sBAAgDC,EAAE,IAAIC,EAAE,IAAIR,MAAOE,GAAoB,IAAPC,GAAYH,EAAOM,OAHrF,GAGwGD,UAAU,eAArH,aAAaN,EAAQ,gBAEhC,sBAAiDQ,EAAE,IAAIC,EAAGC,KAAeJ,UAAU,mBAAnF,SAAuGD,EAAKL,IAAjG,aAAaA,EAAQ,iBAChC,uBAA8CQ,EAAGP,EAAQ,EAAGQ,EAAGC,KAAeJ,UAAU,yBAAxF,UAAkHD,EAAKF,GAAvH,MAAW,aAAaH,EAAQ,gBAJ1B,aAAaA,EAAQ,YAD8C,aAAaA,IAzI1F,EAAKtC,MAAQ,CACXiB,aAAc,GACdD,eAAgB,GAChBI,gBAAgB,EAChBM,eAAgB,GAChB/B,QAAS,GACTa,YAAa,EACbT,gBAAiB,EACjBe,UAAW,GAVI,E,sDAgBnB,WACEmC,KAAKpC,SAAS,CACZI,aAAcgC,KAAK7D,MAAM6B,aACzBD,eAAgBiC,KAAK7D,MAAM4B,eAC3BU,eAAgBuB,KAAK5D,YAAY4D,KAAK7D,MAAMO,SAC5CA,QAASsD,KAAK5D,YAAY4D,KAAK7D,MAAMO,SACrCa,YAAayC,KAAKvD,gBAAgBuD,KAAK7D,MAAMO,SAC7CmB,UAAWmC,KAAKnD,cAAcmD,KAAK7D,MAAMO,WAE3CsD,KAAKlC,aACF9B,EAAWgE,KAAK7D,MAAM4B,gBAAkB,MAAQiC,KAAK7D,MAAM6B,aAC5DgC,KAAK7D,MAAMO,QACXsD,KAAK3C,oBAAoB2C,KAAK7D,MAAMsC,mB,oBAyHxC,WAAU,IAAD,OAEDwB,IAAeD,KAAKjD,MAAML,QAAQwD,OAAS,GAEjD,EAA8CF,KAAKjD,MAA5CiB,EAAP,EAAOA,aAAaD,EAApB,EAAoBA,eAAerB,EAAnC,EAAmCA,QAC5BgD,EAAQM,KAAK7D,MAAbuD,KAEP,OAAQO,EACJ,wBACA,sBAAKN,UAAU,mBAAf,UACE,oBAAGA,UAAU,eAAb,UAA6BD,EAAK,YAAlC,IAAgDA,EAAK3B,GAArD,MAAyE2B,EAAK1B,MAC7EtB,EAAQlC,KAAI,SAAAC,GACT,OAAO,sBAAKkF,UAAU,uBAAf,UAEN,EAAKP,YAAY3E,EAAEsE,WAAY,EAAK5C,MAAMgE,cAAe,IAAI1F,EAAEyC,OAAO,EAAKH,MAAMc,WAChF,sBAAK8B,UAAU,8BAAf,UACE,wBACEA,UAAU,oBACVS,SAAU,EAAKlB,iBAAiBzE,EAAEkD,IAAI,IACtC0C,QAAS,EAAK7C,cAAc8C,KAAK,EAAK7F,EAAEkD,IAAI,IAH9C,gBAKA,wBACEgC,UAAU,oBACVS,SAAU,EAAKlB,iBAAiBzE,EAAEkD,IAAI,GACtC0C,QAAS,EAAK7C,cAAc8C,KAAK,EAAK7F,EAAEkD,IAAI,GAH9C,eAKA,wBACEgC,UAAU,oBACVS,SAAU,EAAKlB,iBAAiBzE,EAAEkD,GAAG,GACrC0C,QAAS,EAAK7C,cAAc8C,KAAK,EAAK7F,EAAEkD,GAAG,GAH7C,eAKA,wBACEgC,UAAU,oBACVS,SAAU,EAAKlB,iBAAiBzE,EAAEkD,GAAG,IACrC0C,QAAS,EAAK7C,cAAc8C,KAAK,EAAK7F,EAAEkD,GAAG,IAH7C,qBAnB8C,uBAAuBlD,EAAEkD,OA4B/E,qBAAKgC,UAAU,uBAAf,SACGK,KAAKZ,YAAY,2BAA4BY,KAAK7D,MAAMgE,cAAe,IAAIH,KAAKjD,MAAMD,gBAAgBkD,KAAKjD,MAAMc,YADzE,iCAG3C,qBAAK8B,UAAU,uBAAf,SACE,kCACE,uBAAOY,KAAK,WAEVC,SAAUR,KAAK/B,qBAAqBqC,KAAKN,MACzCS,gBAAgB,GAFX,8CAINf,EAAK,sBANI,oDAD6B,sCAY3C,uBACA,wBACEC,UAAU,0DACVU,QAASL,KAAK1B,YAAYgC,KAAKN,MAFjC,SAGEN,EAAK,WACP,8B,GAlNqBgB,aA4N/BxE,EAAiByE,aAAe,GAEjBzE,QChOT0E,G,wDACJ,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IAmBV2B,aAAe,SAACY,EAASC,GACvB,EAAKxC,MAAM6C,OAAO,CAChBN,SAAUA,EACVC,OAAQA,EACRM,aAAa,KAtBb,EAAKlC,MAAQ,CACXiB,aAAc,GACdD,eAAgB,IAJH,E,sDASnB,WACEiC,KAAKpC,SAAS,CACZI,aAAcgC,KAAK7D,MAAM6B,aACzBD,eAAgBiC,KAAK7D,MAAM4B,iBAE7BiC,KAAKlC,aACF9B,EAAWgE,KAAK7D,MAAM4B,gBAAkB,MAAQiC,KAAK7D,MAAM6B,aAC5D,M,0BAYJ,SAAaE,GACX8B,KAAKlC,aACF9B,EAAWgE,KAAKjD,MAAMgB,gBAAkB,MAAQiC,KAAKjD,MAAMiB,aAC5DE,EAAME,OAAOyC,S,oBAIjB,WAEE,IAAMZ,GAAeD,KAAKjD,MAAMiB,aAEhC,EAAsCgC,KAAKjD,MAApCiB,EAAP,EAAOA,aAAaD,EAApB,EAAoBA,eACb2B,EAAQM,KAAK7D,MAAbuD,KAEP,OAAQO,EACJ,wBACA,sBAAKN,UAAU,mBAAf,UACE,oBAAGA,UAAU,eAAb,UAA6BD,EAAK,YAAlC,IAAgDA,EAAK3B,GAArD,MAAyE2B,EAAK1B,MAE9E,uBAAOuC,KAAK,OAAOC,SAAUR,KAAKc,aAAaR,KAAKN,QACpD,uBACA,8B,GAlDqBU,cA2D/BE,EAAiBD,aAAe,GAEjBC,QC5DTG,G,wDACJ,WAAY5E,GAAQ,IAAD,8BACjB,cAAMA,IASR2B,aAAe,SAACY,EAASC,GACvB,EAAKxC,MAAM6C,OAAO,CAChBN,SAAUA,EACVC,OAAQA,EACRM,aAAa,KAZf,EAAKlC,MAAQ,CACXiB,aAAc,GACdD,eAAgB,GAChBrB,QAAS,GACTiC,OAAQ,kBANO,E,gDAkBnB,SAAaT,GAQX8B,KAAKpC,SAAS,CACZe,OAAQT,IAEV8B,KAAKlC,aACF9B,EAAWgE,KAAKjD,MAAMgB,gBAAkB,MAAQiC,KAAKjD,MAAMiB,aAC5DE,EAAM2C,S,gCAIV,WACEb,KAAKpC,SAAS,CACZI,aAAcgC,KAAK7D,MAAM6B,aACzBD,eAAgBiC,KAAK7D,MAAM4B,eAC3BrB,QAASsD,KAAK7D,MAAMO,UAEtBsD,KAAKlC,aACF9B,EAAWgE,KAAK7D,MAAM4B,gBAAkB,MAAQiC,KAAK7D,MAAM6B,aAC5DgC,KAAKjD,MAAM4B,U,oBAKf,WACE,IAAMsB,IAAeD,KAAKjD,MAAML,QAAQwD,OAAS,GAEjD,EAA8CF,KAAKjD,MAA5CiB,EAAP,EAAOA,aAAaD,EAApB,EAAoBA,eAAerB,EAAnC,EAAmCA,QAC5BgD,EAAQM,KAAK7D,MAAbuD,KACDsB,EAAmBtE,EAAQlC,KAAI,SAAAyG,GACnC,MAAO,CAAC,MAASA,EAAK,MAASvB,EAAKuB,OAGhCC,EAAe,CACnBC,QAAS,SAAAC,GAAM,kCAAUA,GAAV,IAAkBC,gBAAiB,WAClDC,OAAQ,SAASF,EAAT,GAA8D,EAA3CG,KAA2C,EAArCC,WAAqC,EAAzBC,UAAyB,EAAdC,WACtD,OAAO,2BACFN,GADL,IAEEO,SAAU,QAKhB,OAAQ1B,EACJ,wBACA,sBAAKN,UAAU,kBAAf,UACE,oBAAGA,UAAU,eAAb,UAA6BD,EAAK,YAAlC,IAAgDA,EAAK3B,GAArD,MAAyE2B,EAAK1B,MAO9E,cAAC,IAAD,CACE6C,MAAOb,KAAKjD,MAAM4B,OAClB6B,SAAUR,KAAKc,aAAaR,KAAKN,MACjCtD,QAASsE,EACTI,OAAQF,IAEV,uBACA,8B,GArFoBR,cA+F9BK,EAAgBJ,aAAe,GAEhBI,QCmIAa,E,4JAlOd,WAEG,MAAiF5B,KAAK7D,MAA/E0F,EAAP,EAAOA,sBAAsBC,EAA7B,EAA6BA,yBAAyBxC,EAAtD,EAAsDA,MAAMI,EAA5D,EAA4DA,KAAK5B,EAAjE,EAAiEA,aAC3DiE,EAAoB,kBAAMF,EAAsBC,EAAyBxC,IAEjF,OAAO,gCACH,cAAC,EAAD,CACFvB,eAAgB,IAChBC,aAAa,YACbmC,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAET,cAAC,EAAD,CACDC,eAAgB,EAChBC,aAAa,mBACbtB,QAAS,CACP,gBACD,QACA,QACA,QACA,QACA,eAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAEP,cAAC,EAAD,CACCC,eAAgB,EAChBC,aAAa,sBACbmC,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAIT,cAAC,EAAD,CACCC,eAAgB,EAChBC,aAAa,oBACbtB,QAAS,CACR,OACA,SACA,wBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACCC,eAAgB,EAChBC,aAAa,+BACbtB,QAAS,CACR,6BACA,qBACA,UACA,yCACA,kBACA,wBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAET,cAAC,EAAD,CACDC,eAAgB,EAChBC,aAAa,2DACbtB,QAAS,CACP,4BACD,8BACA,eACA,yBACA,iCACA,kBACA,wBACA,wBACA,qBACA,0CACA,qBACA,aACA,kBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGP,cAAC,EAAD,CACCC,eAAgB,EAChBC,aAAa,0BACbmC,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACCC,eAAgB,EAChBC,aAAa,yBACbtB,QAAS,CACR,WACA,YACA,SACA,QACA,UACA,iBACA,cACA,kBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACDC,eAAgB,EAChBC,aAAa,0FACbtB,QAAS,CACP,CAACiB,GAAG,EAAEoB,WAAW,iBAAiB7B,OAAO,GAAGqD,KAAK,WACnD,CAAC5C,GAAG,EAAEoB,WAAW,UAAU7B,OAAO,GAAGqD,KAAK,WAC1C,CAAC5C,GAAG,EAAEoB,WAAW,2BAA2B7B,OAAO,GAAGqD,KAAK,WAC1D,CAAC5C,GAAG,EAAEoB,WAAW,oCAAoC7B,OAAO,GAAGqD,KAAK,YAErEJ,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGP,cAAC,EAAD,CACCC,eAAgB,GAChBC,aAAa,uGACbtB,QAAS,CACR,mBACA,aACA,aACA,aACA,aACA,oBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACCC,eAAgB,GAChBC,aAAa,wJACbtB,QAAS,CACR,qDACA,uCACA,kFACA,oFACA,wBAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACDC,eAAgB,GAChBC,aAAa,8KACbtB,QAAS,CACP,CAACiB,GAAG,EAAEoB,WAAW,eAAe7B,OAAO,GAAGqD,KAAK,WACjD,CAAC5C,GAAG,EAAEoB,WAAW,QAAQ7B,OAAO,GAAGqD,KAAK,WACxC,CAAC5C,GAAG,EAAEoB,WAAW,iBAAiB7B,OAAO,GAAGqD,KAAK,WACjD,CAAC5C,GAAG,EAAEoB,WAAW,QAAQ7B,OAAO,GAAGqD,KAAK,YAGxCJ,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGR,cAAC,EAAD,CACEC,eAAgB,GAChBC,aAAa,uWACbtB,QAAS,CACR,2BACA,2BACA,2BACA,2BACA,4BAEDsF,YAAY,EACZ7B,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGV,cAAC,EAAD,CACEC,eAAgB,GAChBC,aAAa,+EACbtB,QAAS,CACR,CAACiB,GAAG,EAAEoB,WAAW,kBAAkB7B,OAAO,EAAEqD,KAAK,WACjD,CAAC5C,GAAG,EAAEoB,WAAW,aAAa7B,OAAO,GAAGqD,KAAK,WAC7C,CAAC5C,GAAG,EAAEoB,WAAW,aAAa7B,OAAO,GAAGqD,KAAK,WAC7C,CAAC5C,GAAG,EAAEoB,WAAW,eAAe7B,OAAO,EAAEqD,KAAK,WAC9C,CAAC5C,GAAG,EAAEoB,WAAW,gBAAgB7B,OAAO,GAAGqD,KAAK,YAEjDJ,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,IAGT,cAAC,EAAD,CACDC,eAAgB,GAChBC,aAAa,4HACbmC,cAAe4B,IACfrC,KAAMA,EACNV,OAAQlB,W,GA1NiBmE,IAAMvB,WC0WlBwB,E,kDApWb,WAAY/F,GAAQ,IAAD,uBACjB,cAAMA,IAoDRgG,gBAAkB,CAChB,CAAEtB,MAAO,KAAMuB,MAAO,YAtDL,EAwFnBC,iBAAmB,WAqBjB,OAlBA,EAAKC,IAAIC,YAAW,SAAA9H,GAClB+H,QACGC,IAAIhI,EAAEiI,KAAKlI,KAAI,SAAAmI,GAAG,OAAIA,EAAIpB,WAC1BqB,MAAK,SAAAC,GAOJ,IAAIC,EAAmBD,EAAOE,QAN9B,SAAmBC,GACjB,IAAIC,EAAO,IAAIC,KAAKF,EAAU,YAG9B,OAFgBC,EAAKE,kBAEdF,EADUG,IAASC,QAAQ,OAAOC,OAAO,QAIlD,EAAK1F,SAAS,CACZ2F,WAAYV,EACZW,sBAAuBV,EAAiB5C,eAd/B,IA1FA,EAgHnBuD,cAAgB,WAEd,OAAO,wBACH9D,UAAU,2DACVS,UAAW,EAAKlB,mBAChBmB,QAAS,EAAKqD,kBAAkBpD,KAAvB,gBAHN,SAIH,EAAKZ,KAAK,0BAtHG,EAyHnBiE,SAAW,YAA4C,EAAzCC,MAAyC,EAAlCC,QAAmC,IAA1BC,EAAyB,EAAzBA,QAC5B,OADqD,EAAhBC,UAG5B,EAAKN,gBAGL,gCACF,EAAK/D,KAAK,kBADR,IAC2B,uBAC7B/E,EAAiBmJ,GAFf,IAE0B,EAAKpE,KAAK,eAjI5B,EAsInBA,KAAO,SAAC9E,GAAD,OPhJe,SAACA,EAAEG,GACzB,IAAIiJ,EAAe,GAcnB,MAbU,OAANjJ,EACFiJ,EAAepJ,EAGC,kBAANA,EACRoJ,EAAelJ,EAAgBF,EAAEG,GACxBkJ,MAAMC,QAAQtJ,GACvBoJ,EAAepJ,EAEO,kBAANA,GAAkBuJ,OAAOC,UAAUxJ,KACnDoJ,EAAe7J,EAAgBS,IAG5BoJ,EOiIOK,CAASzJ,EAAG,EAAKmC,MAAMuH,iBAAiBzD,QAtInC,EAwInB/C,aAAe,SAACe,GACd,IAAI0F,EAAU,EAAKxH,MAAMwH,QACnBC,EAA2C,kBAAd3F,EAAEF,OAAuBhE,EAAiBkE,EAAEF,QAAUE,EAAEF,OAC3F4F,EAAQ1F,EAAEH,UAAY,CAACC,OAAQ6F,EAAqBvF,YAAaJ,EAAEI,aACnE,EAAKrB,SAAS,CACZ2G,QAASA,KA7IM,EAqKnBE,qBAAuB,SAACC,GACtB,EAAK9G,SAAS,CAAE0G,iBAAkBI,KAtKjB,EAyKnBxF,iBAAmB,WACjB,OAAOyF,OAAOC,OAAO,EAAK7H,MAAMwH,SAC7B/J,KAAI,SAAAC,GAAC,OAAIA,EAAEwE,eACX4F,QAAO,SAACC,EAAaC,GAAd,OAAuBD,GAAeC,KAAK,IA5KpC,EA+KnBC,eAAiB,SAACT,GAChB,IAAMU,EAAYN,OAAOO,KAAKX,GAC1BY,EAAa,GAUjB,OATAF,EAAU1I,SAAQ,SAAA6I,GACkB,kBAAvBb,EAAQa,GAAGzG,OACpB4F,EAAQa,GAAGzG,OAAOpC,SAAQ,SAAA9B,GACxB0K,EAAWC,EAAE,IAAI3K,EAAEsE,YAActE,EAAEyC,OAAO5C,cAG5C6K,EAAWC,GAAKb,EAAQa,GAAGzG,OAAOrE,cAG/B6K,GA3LU,EA8LnBE,mBAAqB,WAEnB,IAAIrC,EAAU,2BACT,EAAKgC,eAAe,EAAKjI,MAAMwH,UADtB,IAEZe,WAAY,IAAIpC,KAAK,EAAKnG,MAAMuI,WAAWhC,UAC3CiC,iBAAkB,EAAKxI,MAAMuI,WAAWhC,SACxCkC,YAAa,IAAItC,KAAKE,IAASE,UAC/BmC,kBAAmBrC,IAASE,SAC5BoC,gBAAiB,gBAKfC,EAA4B,EAAK5I,MAAM6I,mBACvCC,EAAgB7C,EAAWsC,WAAWhL,WAC1CqL,EAAyBE,GAAiB7C,EAC1C,EAAKpF,SAAS,CACZkI,WAAW,EACXF,mBAAoBD,IAGtBpH,QAAQC,IAAR,iBAAsBqH,IAGtB,EAAKvD,IAAIyD,IAAI/C,GACXJ,MAAM,SAACoD,GAENA,EAAOC,MAAMrD,MAAK,SAACD,GACjB,IAAIgD,EAA2B,EAAK5I,MAAM6I,mBACvCM,EAAsB,EAAKnJ,MAAMoJ,cAEjCC,EAAwBzD,EAAIpB,OAAO+D,WAClCO,EAAgBO,EAAsBC,SAAS/L,kBAC5CqL,EAAyBE,GAChCK,EAAoB1J,KAAKqJ,GACzBtH,QAAQC,IAAR,iBAAsB4H,IACvB,EAAKxI,SAAS,CACbgI,mBAAoBD,EACnBQ,cAAeD,IAEhBI,MAAM,2BAAD,OAA4BT,UAGpCU,OAAM,SAACC,GACNjI,QAAQiI,MAAR,iCAAwCA,EAAxC,UAEHjI,QAAQC,IAAI,EAAKzB,MAAM6I,oBAIvBrH,QAAQC,IAAIiI,KAAKC,UAAU1D,KAhPV,EAoPnBU,kBAAoB,WAClB,EAAK9F,SAAS,CACZ0H,WAAYlC,IACZ0C,WAAW,EACXa,WAAW,KAtPbrL,EAASQ,YAAY8K,oBAClBL,OAAM,SAASM,GACI,uBAAZA,EAAIC,MAIJvI,QAAQiI,MAAMK,GACrBtI,QAAQC,IAAI,wBACc,iBAAZqI,EAAIC,OAIXvI,QAAQiI,MAAMK,GACrBtI,QAAQC,IAAI,qBAfE,OAqBjB,EAAK8D,IAAMhH,EAASQ,YAAYiL,WAFF,eAI9B,EAAKC,YAAc,KACnB,EAAKjK,MAAQ,CACXkK,WAAY,CACdrH,OAAQsH,OAAOC,YACf7H,MAAO4H,OAAOE,YAEZtF,yBAA0B,GAC1BwC,iBAAkB,CAChBlC,MAAM,UACNvB,MAAM,MAER0D,QAAS,GACTe,WAAY,GACZQ,WAAW,EACXvC,WAAY,GACZ8D,YAAa,GACbC,uBAAwBlE,IACxBmE,sBAAsB,EACtBC,0BAA0B,EAC1Bb,WAAW,EACXc,cAAe,EACfC,iBAAkB,EAClBC,YAAY,EACZ/B,mBAAoB,GACpBO,cAAe,GACf3C,sBAAuB,IAEzB,EAAKoE,iBAAmB,EAAKA,iBAAiBtH,KAAtB,gBAlDP,E,qDA2DnB,WAAqB,IAAD,OAClB4G,OAAOW,iBAAiB,SAAU7H,KAAK4H,kBAEvC5H,KAAKqC,mBACLrC,KAAKsC,IAAIC,WAAW,CAACuF,wBAAwB,IAAO,SAAAC,GAClD,IAAIC,EAAaD,EAASrF,KAAKlI,KAAI,SAAAmI,GAAG,OAAIA,EAAIpB,UAC9ChD,QAAQC,IAAR,iCAAsCwJ,EAAW9H,OAAjD,iBAAgE6H,EAASE,SAASC,mBAClF,EAAKtK,SAAS,CACZyJ,YAAaW,EACbT,qBAAsBQ,EAASE,SAASE,UACxCb,uBAAwBlE,IACxBoE,yBAA0BO,EAASE,SAASC,wB,+BA8ElD,SAAkBpG,EAAyBxC,GAIzC,IAAMqC,EAAWrC,EAAQwC,EAA2B,GACpD,OAAO3E,KAAKiL,IAAI,IAAIzG,K,8BAGtB,WACE3B,KAAKpC,SAAS,CACZqJ,WAAY,CACdrH,OAAQsH,OAAOC,YACf7H,MAAO4H,OAAOE,gB,oBA8FhB,WAAU,IAAD,OAEP,OACE,sBAAKzH,UAAU,MAAf,UACE,wBAAQA,UAAU,gCAAlB,SAKE,sBAAMA,UAAU,mBAAhB,sCAIF,sBAAKA,UAAU,+BAAf,UAEA,wBAAOA,UAAU,gBAAjB,kCAEE,cAAC,IAAD,CACEkB,MAAOb,KAAKjD,MAAMuH,iBAClB9D,SAAUR,KAAKyE,qBACf/H,QAASsD,KAAKmC,gBACdxC,UAAU,cAId,uBAEIK,KAAKjD,MAAM+I,UACT,gCACA,sBAAMnG,UAAU,WAAhB,SACI,uBAAMA,UAAU,iBAAhB,UACGK,KAAKN,KAAK,0BADb,IACyCM,KAAKjD,MAAMuI,WAAWhC,OAAO,+BAG1E,uBAEA,cAAC,EAAD,CACEzB,sBAAuB7B,KAAK+B,kBAC5BD,yBAA0B9B,KAAKjD,MAAM+E,yBACrCxC,MAAOU,KAAKjD,MAAMkK,WAAW3H,MAC7BI,KAAMM,KAAKN,KACX5B,aAAckC,KAAKlC,eAGrB,wBACE6B,UAAU,2DACVS,UAAWJ,KAAKd,mBAChBmB,QAASL,KAAKqF,mBAAmB/E,KAAKN,MAHxC,SAIEA,KAAKN,KAAK,6BAEd,+BACIM,KAAKjD,MAAM4J,UACT3G,KAAKyD,mBAQb,uBAkBA,qBAAK9D,UAAU,eAAf,SACE,sBAAMA,UAAU,WAAhB,SACE,uBAAMA,UAAU,iBAAhB,UACGK,KAAKN,KAAK,4BADb,MAC4C,iCAASM,KAAKjD,MAAMsK,YAAYnH,gBAKhF,qBAAKP,UAAU,eAAf,SACGK,KAAKjD,MAAMsK,YAAYnH,OAAS,EAC/B,cAAC,UAAD,CAASP,UAAU,kEACnB0I,SAAQ,8BAAyBrI,KAAKjD,MAAMuK,uBAAuBhE,OAAO,wBAAlE,QACR/B,KAAMvB,KAAKjD,MAAMsK,YACjBhH,QAAS,WAAKiG,MAAM,eAAD,OAAgB,EAAKvJ,MAAMsK,YAAYnH,OAAvC,gBAAqD,EAAKnD,MAAMyK,yBAA2B,+BAAgC,GAA3H,gDAAqK,EAAKzK,MAAMuK,uBAAuBhE,OAAO,wBAA9M,OAHnB,kCAKE,iB,GA7VE5C,aCCZ4H,EAAcC,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThG,MAAK,SAAAqG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpM,QACf+L,UAAUC,cAAcO,YAI1B/K,QAAQC,IACN,gHAKEqK,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB1K,QAAQC,IAAI,sCAGRqK,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B1C,OAAM,SAAAC,GACLjI,QAAQiI,MAAM,4CAA6CA,MC1FjEiD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwB5C,OAAOsB,SAASuB,MACpDC,SAAW9C,OAAOsB,SAASwB,OAIvC,OAGF9C,OAAOW,iBAAiB,QAAQ,WAC9B,IAAMe,EAAK,UAAMkB,GAAN,sBAEPxB,IAgEV,SAAiCM,EAAOC,GAEtCoB,MAAMrB,GACHhG,MAAK,SAAAsH,GAEJ,IAAMC,EAAcD,EAASE,QAAQnE,IAAI,gBAEnB,MAApBiE,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAM3H,MAAK,SAAAqG,GACjCA,EAAauB,aAAa5H,MAAK,WAC7BsE,OAAOsB,SAASiC,eAKpB9B,EAAgBC,EAAOC,MAG1BtC,OAAM,WACLhI,QAAQC,IACN,oEArFAkM,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAM3H,MAAK,WACjCrE,QAAQC,IACN,gHAMJmK,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.a51aafea.chunk.js","sourcesContent":["// import _ from 'lodash';\nimport Rabbit from \"rabbit-node\";\n\nexport const l10nMain = (s,l) => {\n  let returnString = '';\n  if (l === 'en') {\n    returnString = s;\n  } else {\n    // console.log(s);\n    if(typeof s === 'string') {\n      returnString = translateString(s,l);\n    } else if (Array.isArray(s)){\n      returnString = s;\n      // return s.forEach(item => item.label = translateString(item.label));\n    } else if (typeof s === 'number' && Number.isInteger(s)) {\n      returnString = translateNumber(s);\n    }\n  }\n  return returnString;\n}\n\n\n\nconst translateNumber = (number) => {\n  let digits = number.toString().split('');\n  digits = digits.map(d => {\n    switch(d) {\n      case '0':\n        return '၀';\n      case '1':\n        return '၁';\n      case '2':\n        return '၂';\n      case '3':\n        return '၃';\n      case '4':\n        return '၄';\n      case '5':\n        return '၅';\n      case '6':\n        return '၆';\n      case '7':\n        return '၇';\n      case '8':\n        return '၈';\n      case '9':\n        return '၉';\n      default:\n        return d;\n    }\n  })\n  digits = digits.join('')\n  // console.log(digits);\n  return digits;\n}\n\nexport const replaceMMNumbers = (s) => {\n  s = s.toString();\n  s = s.split(\"၀\").join(\"0\");\n  s = s.split(\"၁\").join(\"1\");\n  s = s.split(\"၂\").join(\"2\");\n  s = s.split(\"၃\").join(\"3\");\n  s = s.split(\"၄\").join(\"4\");\n  s = s.split(\"၅\").join(\"5\");\n  s = s.split(\"၆\").join(\"6\");\n  s = s.split(\"၇\").join(\"7\");\n  s = s.split(\"၈\").join(\"8\");\n  s = s.split(\"၉\").join(\"9\");\n  return s;\n}\n\nconst lookup = (() => {\n\n  let lookup = {\n    '0(a)': '၀(က)',\n    '0(b)': '၀(ခ)',\n    'which state/region is this questionnaire being administered in?': 'စစ်တမ်းကောက်သည့် ပြည်နယ်(သို့)တိုင်းဒေသကြီး',\n    'ayeyarwaddy': 'ဧရာဝတီ',\n    'chin': 'ချင်း',\n    'kayin': 'ကရင်',\n    'mandalay': 'မန္တလေး',\n    'mon': 'မွန်',\n    'yes, recorded': 'ရှိပါသည်။',\n    'no, not recorded': 'မရှိပါ။',\n    \n    'was this household recorded on the household list?': 'ဤအိမ်ထောင်စုသည် ရပ်ကွက်/ ကျေးရွာတွင် စာရင်း၀င်/ စာရင်းပေါက်မှု ရှိပါသလား။',\n    'january': 'ဇန်နဝါရီ',\n    'february': 'ဖေဖော်ဝါရီ',\n    'march': 'မတ်',\n    'april': 'ဧပြီ',\n    'may': 'မေ',\n    'june': 'ဇွန်',\n    'july': 'ဇူလိုင်',\n    'august': 'သြဂုတ်',\n    'september': 'စက်တင်ဘာ',\n    'october': 'အောက်တိုဘာ',\n    'november': 'နိုဝင်ဘာ',\n    'december': 'ဒီဇင်ဘာ',\n    'question': 'မေးခွန်း',\n    'reset': 'မူရင်းအတိုင်း',\n    'ward/village code number':'ရပ်ကွက်/ ကျေးရွာ ၏ ကုဒ်နံပါတ်',\n    'what is your age?':'သင့်အသက်ကိုဖော်ပြပါ။',\n    'what is your sex?':'ကျား သို့ မ ကိုဖော်ပြပါ။',\n    'male':'ကျား',\n    'female':'မ',\n    'did not answer':'မဖြေပါ',\n    'what is your relationship to the head of household?':'အိမ်ထောင်ဦးစီးနှင့် တော်စပ်ပုံ',\n    'head':'အိမ်ထောင်ဦးစီး',\n    'wife/husband':'ဇနီး /ခင်ပွန်း',\n    'daughter/son':'သမီး/သား',\n    'elder or younger sister/elder or younger brother':'ညီမ/အစ်မ/ညီ/အစ်ကို',\n    'daughter-in-law/son-in-law':'ချွေးမ/သားမက်',\n    'sister-in-law/brother-in-law':'ယောက်မ/ခဲအို',\n    'grandchild':'မြေး',\n    'parent':'မိဘ',\n    'parent-in-law':'ယောက္ခမ',\n    'other relative':'အခြားသောတော်စပ်ပုံ',\n    'adopted/foster/step child':'မွေးစား/ စောင့်ရှောက်/ မယားပါ၊ လင်ပါ သားသမီး',\n    'not related':'မတော်စပ်ပါ',\n    'don’t know':'မသိပါ',\n    'what is your marital status?':'အိမ်ထောင်ရေးအခြေအနေ',\n    'married or living together':'လက်ထပ် သို့ အတူနေထိုင်ခြင်း',\n    'divorced/separated':'ကွာရှင်း သို့ ခွဲခွာ၍နေထိုင်ခြင်း',\n    'widowed':'မုဆိုးမ/ဖို',\n    'never married and never lived together':'လက်မထပ်ထားခြင်း သို့ အတူလုံးဝမနေခြင်း',\n    'what is your ethnicity?':'ဘာလူမျိုးလဲ။',\n    'what is your religion?':'ကိုးကွယ်သည့်ဘာသာကိုဖော်ပြပါ။',\n    'buddhist':'ဗုဒ္ဒဘာသာ',\n    'christian':'ခရစ်ယာန်',\n    'muslim':'မူစလင်',\n    'hindu':'ဟိန္ဒူ',\n    'animist':'နတ်ကိုးကွယ်',\n    'other religion':'အခြားသောဘာသာ',\n    'no religion':'ဘာသာမဲ့',\n    'what is the highest level of education you have completed?':'အမြင့်ဆုံးပြီးစီးခဲ့သော ပညာရေး/ အတန်းပညာ',\n    'less than 1st standard':'၁ တန်းအောက်',\n    '1st standard':'၁ တန်း',\n    '2nd standard':'၂ တန်း',\n    '3rd standard':'၃ တန်း',\n    '4th standard':'၄ တန်း',\n    '5th standard':'၅ တန်း',\n    '6th standard':'၆ တန်း',\n    '7th standard':'၇ တန်း',\n    '8th standard':'၈ တန်း',\n    '9th standard':'၉ တန်း',\n    '10th standard':'၁၀ တန်း',\n    'bachelor’s degree':'ဘွဲ့ရ',\n    'postgraduate degree':'ဘွဲ့လွန်',\n    'vocational qualification':'အသက်မွေးဝမ်းကျောင်းပညာ',\n    'what was your activity status during the last 12 months?':'လွန်ခဲ့သော ၁၂ လအတွင်း သင့်အလုပ်အကိုင်အခြေအနေကိုဖော်ပြပါ။ ',\n    '1 - employee (government)':'၁ - အစိုးရဝန်ထမ်း',\n    '2 - employee (private, org)':'၂ - အဖွဲ့အစည်းသို့ ကုမ္ပဏီဝန်ထမ်း',\n    '3 - employer':'၃ - အလုပ်ရှင်',\n    '4 - own account worker':'၄ - ကိုယ်ပိုင်လုပ်ငန်းလုပ်သူ',\n    '5 - contributing family worker':'၅ - မိသားစုလုပ်ငန်းတွင်ကူညီသူ',\n    '6 - sought work':'၆ - အလုပ်ရှာဖွေနေသူ',\n    '7 - did not seek work':'၇ - အလုပ်လက်မဲ့',\n    '8 - full-time student':'၈ - အချိန်ပြည့်ကျောင်းသား/သူ',\n    '9 - household work':'၉ - အိမ်မှု ကိစ္စလုပ်သူ',\n    '10 - pensioner, retired, elderly person':'၁၀ - ပင်စင်စား၊ အနားယူ၊ သက်ကြီးရွယ်အို',\n    '11 - ill, disabled':'၁၁ - ဖျားနာ၊မသန်စွမ်းသူ',\n    '12 - other':'၁၂ - အခြား',\n    '(for those that responded with 1-5 or 12 to q11), what work were you mainly doing in the last 12 months?':'အထက်ပါ မေးခွန်း ၁၁ တွင် အချက် ၁ မှ ၅ (သို့) ၁၂ ဖြေကြားသူများသည် လွန်ခဲ့သော ၁၂ လ အတွင်း မည်သို့သော အလုပ်ကို အဓိကလုပ်ပါသလဲ။',\n    'do you own a mobile telephone?':'လက်ကိုင်ဖုန်းပိုင်ဆိုင်ပါသလား။',\n    'yes':'ပိုင်ဆိုင်ပါသည်',\n    'no':'မပိုင်ဆိုင်ပါ',\n    'was the survey done at the first house you visited?':'သင် ပထမဆုံး ရောက်ရှိခဲ့သော အိမ်တွင် စစ်တမ်းကောက်ယူမှု ပြုလုပ်ခဲ့ပါသလား။',\n    'yes, it was':'ပြုလုပ်ခဲ့ပါသည်။',\n    'no, it was not':'မပြုလုပ်ခဲ့ပါ။ ', \n    'connected': 'ဆက်စပ်သည်။',\n    'not connected': 'ဆက်စပ်မှုမရှိပါ။',\n    'yes, they have the right' : 'သုံးစွဲခွင့် ရရှိပါသည်။',\n    'no, they do not have the right': 'သုံးစွဲခွင့် မရှိပါ။',\n    'yes to ownership' : 'ရှိပါသည်။',\n    'no to ownership' : 'မရှိပါ။',\n    'does anyone else in your household own a mobile telephone?':'အခြားသော သင့်မိသားစုဝင်များ လည်း လက်ကိုင်ဖုန်းပိုင်ဆိုင်ပါသလား။',\n    'allocate the union budget across the following ministries':'ပြည်ထောင်စုဘတ်ဂျက်ကို အောက်ပါဝန်ကြီးဌာနများ သို့ ခွဲဝေချထားပေးပါ။',\n    'allocate the kayin regional government budget across the following ministries':'ကရင်ပြည်နယ်ဘတ်ဂျက်ကို အောက်ပါဝန်ကြီးဌာနများ သို့ ခွဲဝေချထားပေးပါ။',\n    'allocate the budget between union and region/state level governments':'ပြည်ထောင်စုအဆင့်နှင့် တိုင်းဒေသကြီး / ပြည်နယ်အဆင့်အစိုးရများအကြား ဘတ်ဂျက်ခွဲဝေချထားပေးပါ။',\n    'this survey started at':'ဒီစစ်တမ်း စတင်သည့်အချိန်',\n    'submit questionnaire':'စစ်တမ်းအဖြေတင်သွင်း',\n    'start questionnaire':'စစ်တမ်း စတင်ကောက်ယူပါမည်',\n    'electricity and energy':'လျှပ်စစ်နှင့်စွမ်းအင်',\n    'defence':'ကာကွယ်ရေး',\n    'education':'ပညာရေး',\n    'agriculture, livestock and irrigation':'စိုက်ပျိုးရေး, မွေးမြူရေးနှင့်ဆည်မြောင်း',\n    'health and sports':'ကျန်းမာရေးနှင့်အားကစား',\n    'home affairs':'ပြည်ထဲရေး',\n    'unused percentage points':'အသုံးမပြုသေးတဲ့ရာခိုင်နှုန်းပိုင့်',\n    'construction':'ဆောက်လုပ်ရေး',\n    'electricity':'လျှပ်စစ်',\n    'state government bodies':'ပြည်နယ်အစိုးရအဖွဲ့အစည်းများ',\n    'municipal-daos':'စည်ပင်သာယာ နှင့် ခရိုင်ရုံးများ',\n    'union':'ပြည်ထောင်စု',\n    'region/state':'တိုင်းဒေသကြီး / ပြည်နယ်',\n    'seconds': 'စက္ကန့်',\n    'submitted today': 'ယနေ့တင်သွင်းပြီး',\n    'pending': 'တင်သွင်းရန်',\n    'enumerator name': 'စစ်တမ်းကောက်ယူသူအမည်',\n    'submitted total today': 'ယနေ့တင်သွင်းပြီးစုစုပေါင်း',\n    'submitted total all time': 'စစ်တမ်းကာလတင်သွင်းပြီးစုစုပေါင်း',\n    'submitting': 'ဒေတာတင်သွင်းနေပါသည်',\n    'data submitted': 'ဒေတာတင်သွင်း‌ခြင်း ‌အောင်မြင်သွားပါပြီ',\n    'unable to answer': 'မဖြေနိုင်ပါ',\n    'how many people live in this household in total?': 'ဤအိမ်ထောင်စုတွင် လူဦးရေ စုစုပေါင်း မည်မျှ နေထိုင်ပါသနည်း။ ',\n    \"what is the highest education level that the female household head or spouse of household head has completed?\": 'အိမ်ထောင်စုကို ဦးဆောင်သော အမျိုးသမီး (သို့မဟုတ်) အိမ်ရှင်မ ၏ တက်ရောက် ပြီးစီးအောင်မြင်ခဲ့သော အတန်းပညာအရည်အချင်း ကို ဖော်ပြပါ။ ',\n    \"no female head/spouse\": 'အိမ်ထောင်စုကို ဦးဆောင်သော အမျိုးသမီးမရှိ/ အိမ်ရှင်မ မရှိ',\n    \"no education/kindergarten/first standard\": 'အတန်းပညာမရှိ/မူကြို မတက်ဘူးပါ /ပထမတန်း မတက်ဘူးပါ။',\n    \"second standard\": 'ဒုတိယတန်း ',\n    \"third to fifth standard\": 'တတိယတန်း မှ ပဉ္စမတန်း ',\n    \"sixth standard or higher\": 'ဆဠမတန်း သို့ ဆဠမတန်း အထက်',\n    \"how many rooms does the household occupy, including bedrooms, living rooms, and rooms used for household businesses (do not count toilets, kitchens, balconies, or corridors)?\": 'အိမ် တွင် အခန်းအရေအတွက် (အိပ်ခန်း၊ ဧည့်ခန်း၊ နှင့် အခြား အခန်း) မည်မျှ ရှိပါသနည်း။ (အိမ်သာ၊ မီးဖိုချောင်နှင့် ဝရန်တာ၊ လျှောက်လမ်းများကို ထည့်သွင်းမရေတွက်ပါ)',\n    \"one or none\": 'တစ်ခန်း သို့မဟုတ် အခန်းဖွဲ့ထားခြင်းမရှိ',\n    \"two\": 'နှစ်ခန်း ',\n    \"three\": 'သုံးခန်း ',\n    \"four\": 'လေးခန်း ',\n    \"five or more\": 'ငါးခန်း နှင့် အထက် ',\n    \"what type of stove is used most often for cooking food in the household?\": 'မိသားစု အတွက် အစားအသောက် ချက်ပြုတ်ရာတွင် မည်သည့် မီးဖိုအမျိုးအစားကို သုံးစွဲပါသနည်း။ ',\n    \"open fire, open stove, rice-hush stove or traditional closed stove\": 'ထင်းမီး၊ ရိုးရိုးမီးဖို၊ စပါးခွံမီးဖို သို့မဟုတ် ဒေသသုံးမီးဖို',\n    \"improved stove, stove with electricity, gas, kerosene/diesel or biofuel\": 'လျှပ်စစ်/ ဂတ်စ် / ရေနံဆီ/ ဒီဇယ် သို့ မီးသွေး၊ ထင်း မီးဖို',\n    \"does any household member own or have access to a bicycle or non-motorized boat, a motorcycle, power tiller, trishaw, motorboat, trawlarjee, three-wheeled motor vehicle, motorcar (4 wheels or more), or tractor (including one rented to others or pawned)?\": 'မိသားစုဝင် တစ်ဦးဦးတွင် စက်ဘီးသို့မဟုတ် ရိုးရိုးလှေ၊ ဆိုင်ကယ်၊ လယ်ထွန်စက်သေး၊ ဆိုက်ကား၊ စက်လှေ၊  ထော်လာဂျီ၊ သုံးဘီးဆိုင်ကယ် (တုတ်တုတ်) ၊ မော်တော်ကား (လေးဘီး သို့ လေးဘီးအထက်)၊ သို့မဟုတ် လယ်ထွန်စက်ကြီး စသည့်  ပစ္စည်းတစ်ခုခု ပိုင်ဆိုင်ပါသလား။ (အခြားသူတစ်ဦးဦးကို ငှားရမ်းထားသည့် (သို့မဟုတ်) ပေါင်နှံထားသည့် ပစ္စည်းများလည်း ပါဝင်ပါသည်။)',\n    \"none of these\": 'တစ်ခုမှ မပိုင်ဆိုင်ပါ။',\n    \"only bicylce or non-motorized boat\": 'စက်ဘီး သို့မဟုတ် လှေ တစ်မျိုးတည်းသာ ပိုင်ဆိုင်ပါသည်။',\n    \"motorcycle, power tiller, thrishaw, motroboat, trawlarjee, three-wheeld motor vehicle, motorcar or tractor\": 'ဆိုင်ကယ်၊လယ်ထွန်စက်သေး၊ ဆိုက်ကား၊ စက်လှေ၊ ထော်လာဂျီ၊ သုံးဘီး ဆိုင်ကယ် (တုတ်တုတ်)၊ မော်တော်ကား (သို့)  လယ်ထွန်စက်ကြီး',\n    \"is the main job of any household member connected with agriculture, hunting, forestry, fishery, mining, or quarrying?\": 'မိသားစုဝင်တစ်ဦးဦး ၏ အဓိက အသက်မွေးဝမ်းကျောင်း လုပ်ငန်းသည် စိုက်ပျိုးရေး၊ အမဲလိုက်ခြင်း၊ သစ်တောလုပ်ငန်း၊ ငါးလုပ်ငန်း၊ သတ္ထုတူးဖော်ခြင်း (သို့မဟုတ်) ကျောက်ကျင်းတူးဖော်ခြင်း လုပ်ငန်းတစ်ခုခုနှင့် ဆက်စပ်နေပါသလား။',\n    \"if yes to q20, do they have the right to use land for agriculture, forestry, pasture, livestock breeding, or water surfaces?\": 'အကယ်၍ ဆက်စပ်ပါက စိုက်ပျိုးရေးလုပ်ငန်း၊ သစ်တောလုပ်ငန်း၊ စားကျက်မြေ၊ မွေးမြူရေး (သို့) ရေ နှင့်ဆိုင်သောလုပ်ငန်းများ၏ လိုအပ်ချက်များအတွက် မြေယာသုံးစွဲခွင့် ရရှိပါသလား။',\n    \"if yes to q21, does the household own any non-draught oxen, non-draught buffalo, cows, mythun, horses, or donkeys/mules (including ones rented to others or pawned to others)?\": 'အကယ်၍ မြေယာ သုံးစွဲခွင့် ရှိပါက မိမိတို့အိမ် တွင်  မွေးမြူရေး နွားထီး၊ မွေးမြူရေးကျွဲ၊ နို့စားနွားမများ၊ နွားနောက်၊ မြင်း (သို့) မြည်း စသည့် တိရစ္ဆာန်များ ရှိပါသလား။  (အခြားသူတို့ထံ ငှားရမ်းထားသော သို့မဟုတ် ပေါင်နှံထားသော တိရစ္ဆာန်များလည်း ပါဝင်ပါသည်)',\n    \"what is the major construction material of the floor of their home (observe, do not ask)?\": 'အိမ်၏ ကြမ်းခင်းကို မည်သည့် ပစ္စည်းဖြင့် ဆောက်လုပ်ထားပါသနည်း။ (စစ်တမ်းကောက်ယူသူမှ လေ့လာရန်၊ ဖြေဆိုသူကို မမေးပါနှင့်။)',\n    \"earth/sand, palm/bamboo, combination earth and wood/palm/bamboo or other\": 'မြေသားခင်း/ သဲခင်း၊ ထန်းလက်ခင်း/ ဝါးကြမ်းခင်း၊ မြေသားနှင့် ပျဉ်ခင်း/ ထန်းလက်ခင်း/ ဝါးကြမ်းခင်း (သို့မဟုတ်) အခြား',\n    \"wood planks, parquet or polished wood, cement, wood/cement with covering or combination of cement/wood and something else\": 'သစ်ခင်း၊ ပါကေး (သို့မဟုတ်) ပေါ်လစ်တင်ထားသော ပျဉ်ခင်း၊ အင်္ဂတေခင်း၊  သစ်သား/ အင်္ဂတေခင်း (သို့မဟုတ်) အင်္ဂတေခင်း/ သစ်သား နှင့် အခြား ရောစပ်ခင်းခြင်း။',\n    \"what is the major construction material of the external (outer) walls of their home (observe, do not ask)?\": 'အိမ်၏ နံရံကို မည်သည့် ပစ္စည်းဖြင့် ဆောက်လုပ်ထားပါသနည်း။ (စစ်တမ်းကောက်ယူသူမှ လေ့လာရန်၊ ဖြေဆိုသူကို မမေးပါနှင့်။)',\n    \"thatch/large leaves/palm/dhani or tarpaulin\": 'သက်ကယ်/ သစ်ရွက်/ ထန်းလက်ကာ/ဓနိ (သို့မဟုတ်) တာပေါ်လင် ပလတ်စတစ်',\n    \"bamboo or rudimentary wood\": 'ဝါးကပ်ကာ သို့မဟုတ် သစ်ကြမ်း',\n    \"unbaked brick and mud, finished wood\": 'အုတ် အစိမ်း (နေလှန်းအုတ်) နှင့် ရွှံ့၊ သစ်ချော',\n    \"baked brick and cement or pucca cement\": 'အုတ်ကျက် (မီးဖုတ်အုတ်) နှင့် အင်္ဂတေ သို့မဟုတ် ပတ်ကား အင်္ဂတေ',\n  }\n\n  return lookup;\n})();\n\nconst translateString = (s,l) => {\n  let sen = s.toLowerCase();\n  sen= sen.split('|')[1] ? sen.split('|')[1] : sen;\n  sen = sen.trim()\n\n  // console.log(sen);\n  // console.log(lookup);\n  var smm = '';\n  if (l === 'mm') {\n    smm = lookup[sen] ? lookup[sen] : s;\n  } else if ( l === 'zg') {\n    // convert to Zawgyi\n    smm = lookup[sen] ? Rabbit.uni2zg(lookup[sen]) : s;\n  }\n\n  return smm;\n}\n","import firebase from 'firebase';\n/*\nimport firestore from 'firebase/firestore';\n*/\n\n// const settings = {timestampsInSnapshots: true};\nconst settings = {};\n\nconst config = {\n  apiKey: \"AIzaSyBnWdh6_AUenUCdQAoc4MlSsL5_TbbnI-A\",\n  authDomain: \"db-ccb-survey.firebaseapp.com\",\n  databaseURL: \"https:/db_ccb_survey.firebaseio.com\",\n  projectId: \"db-ccb-survey\",\n  storageBucket: \"db-ccb-survey.appspot.com\",\n  messagingSenderId: \"779517231246\"\n};\nfirebase.initializeApp(config);\n\nfirebase.firestore().settings(settings);\n\nexport default firebase;\n","\nexport const make2digit = (num) => {\n  if (num >= 10) \n    return num.toString();\n  else\n    return \"0\" + num.toString();\n}","import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport './BarchartQuestion.scss'\nimport { max } from 'd3-array'\nimport _ from 'lodash'\nimport { make2digit } from '../../helpers'\n\nclass BarchartQuestion extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      questionText: \"\",\n      questionNumber: \"\",\n      unableToAnswer: false,\n      initialOptions: [],\n      options: [],\n      totalPoints: 0,\n      remainingPoints: 0,\n      maxPoints: 1\n    }\n  }\n\n\n\n  componentWillMount() {\n    this.setState({\n      questionText: this.props.questionText,\n      questionNumber: this.props.questionNumber,\n      initialOptions: this.getNewArray(this.props.options),\n      options: this.getNewArray(this.props.options),\n      totalPoints: this.calcTotalPoints(this.props.options),\n      maxPoints: this.calcMaxPoints(this.props.options)\n    })\n    this.submitAnswer(\n      (make2digit(this.props.questionNumber) + \" - \" + this.props.questionText),\n      this.props.options,\n      this.calcRemainingPoints(this.props.initialOptions)\n    );\n  }\n\n  getNewArray = (oldArray) => {\n    let newArray = [];\n    oldArray.forEach(d => newArray.push({...d}))\n    return newArray;\n  }\n\n  calcTotalPoints = (options) => {\n    return _.sumBy(options, 'points');\n  }\n\n  calcMaxPoints = (options,remainingPoints) => {\n    remainingPoints = remainingPoints ? remainingPoints : this.state.remainingPoints;\n    const maxPoint = max([...options.map(d => d.points), remainingPoints]);\n    return Math.ceil(maxPoint/20)*20;\n  }\n\n  calcRemainingPoints = (options) => {\n    const newTotalPoints = this.calcTotalPoints(options);\n    const remainingPoints = this.state.totalPoints - newTotalPoints;\n    return remainingPoints;\n  }\n\n  changeOptions = (optionId,delta) => {\n    let options = this.state.options;\n    options.forEach(d => {\n      if (d.id === optionId) d.points += delta;\n    })\n\n    const remainingPoints = this.calcRemainingPoints(options);\n    this.setState({\n      options: options,\n      remainingPoints: remainingPoints,\n      maxPoints: this.calcMaxPoints(options,remainingPoints)\n    })\n\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber) + \" - \" + this.state.questionText),\n      options,\n      remainingPoints\n    );\n\n  }\n\n  changeUnableToAnswer = (event) => {\n\n    const unableToAnswer = event.target.checked;\n    this.setState({unableToAnswer: unableToAnswer});\n    const options = this.state.options;\n    const remainingPoints = this.calcRemainingPoints(options);\n\n    // console.log(this.state);\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber) + \" - \" + this.state.questionText),\n      options,\n      remainingPoints,\n      unableToAnswer\n    );\n  }\n\n  resetButton = () => {\n    console.log(\"reset\")\n    const remainingPoints = this.calcRemainingPoints(this.state.initialOptions);\n    this.setState({\n      options: this.getNewArray(this.state.initialOptions),\n      remainingPoints: remainingPoints,\n      maxPoints: this.calcMaxPoints(this.state.initialOptions,remainingPoints)\n    })\n\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber)  + \" - \" + this.state.questionText),\n      this.state.initialOptions,\n      remainingPoints\n    );\n  }\n\n  submitAnswer = (question,answer,remainingPoints,unableToAnswer) => {\n    const answerSimplified = answer.map(a => _.pick(a, ['optionText', 'points']));\n\n    unableToAnswer = ( typeof unableToAnswer === 'undefined' || unableToAnswer === null )\n      ? this.state.unableToAnswer\n      : unableToAnswer;\n\n    answerSimplified.push({\n      optionText: \"Unable to Answer\",\n      points: unableToAnswer\n    })\n    this.props.submit({\n      question: question,\n      answer: answerSimplified,\n      validAnswer: remainingPoints === 0 ? true : false\n    })\n  }\n\n  isButtonDisabled = (optionId,delta) => {\n    let options = this.state.options;\n    const selectedOption = _.find(options, ['id', optionId]);\n\n    if (selectedOption.points + delta < 0) return true;\n    if (delta > this.state.remainingPoints) return true;\n    // if (this.state.remainingPoints + delta < 0) return true;\n\n    return false;\n  }\n\n  barChartBar = (caption,width,totalVal,filteredVal,maxVal) => {\n    const {l10n} = this.props;\n    const barheight = 30;\n    return <svg className='charFiltersBar' width={width} height={barheight} key={'barCharBar'+caption}>\n      <g key={'barCharBar'+caption+'Wrapper'}>\n        <rect key={'barCharBar'+caption+'selectedRect'} x=\"0\" y=\"0\" width={filteredVal/(maxVal*1.1)*width} height={barheight} className=\"barChartBar\"></rect>\n        {/* <rect key={'barCharBar'+caption+'unselectedRect'} x={filteredVal/maxVal*width} y=\"0\" width={(totalVal-filteredVal)/maxVal*width} height={barheight} className=\"barChartBar notSelected\"></rect> */}\n        <text key={'barCharBar'+caption+'selectedLabel'} x=\"5\" y={barheight*.66} className=\"barChartBarLabel\">{l10n(caption)}</text>\n        <text key={'barCharBar'+caption+'totalLabel'} x={width - 5} y={barheight*.66} className=\"barChartBarLabel count\">{l10n(filteredVal)}%</text>\n      </g>\n    </svg>\n  }\n\n  render() {\n\n    const isLoading = !!(this.state.options.length > 0) ? false : true;\n\n    const {questionText,questionNumber,options} = this.state;\n    const {l10n} = this.props;\n\n    return (isLoading\n      ? <div></div>\n      : <div className=\"BarchartQuestion\">\n          <p className=\"QuestionText\">{l10n(\"Question\")} {l10n(questionNumber)} - {l10n(questionText)}</p>\n          {options.map(d => {\n              return <div className=\"BarchartQuestionItem\" key={\"BarchartQuestionItem\"+d.id}>\n              {/* {d.optionText}: {d.points}% */}\n              {this.barChartBar(d.optionText, this.props.questionWidth, 100,d.points,this.state.maxPoints)}\n                <div className=\"BarchartQuestionItemButtons\">\n                  <button\n                    className=\"changeValueButton\"\n                    disabled={this.isButtonDisabled(d.id,-10)}\n                    onClick={this.changeOptions.bind(this,d.id,-10)}\n                  >--</button>\n                  <button\n                    className=\"changeValueButton\"\n                    disabled={this.isButtonDisabled(d.id,-1)}\n                    onClick={this.changeOptions.bind(this,d.id,-1)}\n                  >-</button>\n                  <button\n                    className=\"changeValueButton\"\n                    disabled={this.isButtonDisabled(d.id,1)}\n                    onClick={this.changeOptions.bind(this,d.id,1)}\n                  >+</button>\n                  <button\n                    className=\"changeValueButton\"\n                    disabled={this.isButtonDisabled(d.id,10)}\n                    onClick={this.changeOptions.bind(this,d.id,10)}\n                  >++</button>\n                </div>\n              </div>\n            }\n          )}\n          <div className=\"BarchartQuestionItem\" key={\"BarchartQuestionItemRemaining\"}>\n            {this.barChartBar(\"Unused Percentage Points\", this.props.questionWidth, 100,this.state.remainingPoints,this.state.maxPoints)}\n          </div>\n          <div className=\"BarchartQuestionItem\" key={\"BarchartQuestionItemUnableToAnswer\"}>\n            <label key={\"BarchartQuestionItemUnableToAnswerCheckBoxLabel\"}>\n              <input type='checkbox'\n                key={\"BarchartQuestionItemUnableToAnswerCheckBox\"}\n                onChange={this.changeUnableToAnswer.bind(this)}\n                defaultChecked={false}\n              />\n              {l10n(\"Unable to answer\")}\n            </label>\n          </div>\n\n\n          <br />\n          <button\n            className=\"mdl-button mdl-js-button mdl-button--raised ResetButton\"\n            onClick={this.resetButton.bind(this)}\n          >{l10n(\"Reset\")}</button>\n          <hr/>\n        </div>\n\n\n    );\n  }\n}\n\nBarchartQuestion.propTypes = {}\n\nBarchartQuestion.defaultProps = {}\n\nexport default BarchartQuestion\n","import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport './FreeTextQuestion.scss'\nimport { make2digit } from '../../helpers'\n\nclass FreeTextQuestion extends Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n        questionText: \"\",\n        questionNumber: \"\"\n      }\n    }\n  \n    \n  componentWillMount() {\n    this.setState({\n      questionText: this.props.questionText,\n      questionNumber: this.props.questionNumber\n    })\n    this.submitAnswer(\n      (make2digit(this.props.questionNumber) + \" - \" + this.props.questionText),\n      \"\"\n    )\n  }\n\n  submitAnswer = (question,answer) => {\n    this.props.submit({\n      question: question,\n      answer: answer,\n      validAnswer: true\n    })\n  }\n\n  handleChange(event) {\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber) + \" - \" + this.state.questionText),\n      event.target.value\n    )\n  }\n  \n  render() {\n\n    const isLoading = !!(this.state.questionText) ? false : true;\n\n    const {questionText,questionNumber} = this.state;\n    const {l10n} = this.props;\n\n    return (isLoading\n      ? <div></div>\n      : <div className=\"FreeTextQuestion\">\n          <p className=\"QuestionText\">{l10n(\"Question\")} {l10n(questionNumber)} - {l10n(questionText)}</p>\n          \n          <input type=\"text\" onChange={this.handleChange.bind(this)} />\n          <br />\n          <hr/>\n        </div>\n    );\n\n  }\n}\n\nFreeTextQuestion.propTypes = {}\n\nFreeTextQuestion.defaultProps = {}\n\nexport default FreeTextQuestion\n","import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport './OptionsQuestion.scss'\nimport { make2digit } from '../../helpers'\nimport Select from \"react-select\";\n\nclass OptionsQuestion extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      questionText: \"\",\n      questionNumber: \"\",\n      options: [],\n      answer: \"Did not answer\"\n    }\n  }\n\n  submitAnswer = (question,answer) => {\n    this.props.submit({\n      question: question,\n      answer: answer,\n      validAnswer: true\n    })\n  }\n\n  handleChange(event) {\n    /*this.setState({\n      answer: event.target.value\n    })\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber) + \" - \" + this.state.questionText),\n      event.target.value\n    )*/\n    this.setState({\n      answer: event\n    })\n    this.submitAnswer(\n      (make2digit(this.state.questionNumber) + \" - \" + this.state.questionText),\n      event.value\n    )\n  }\n\n  componentWillMount() {\n    this.setState({\n      questionText: this.props.questionText,\n      questionNumber: this.props.questionNumber,\n      options: this.props.options\n    })\n    this.submitAnswer(\n      (make2digit(this.props.questionNumber) + \" - \" + this.props.questionText),\n      this.state.answer\n    )\n  }\n\n\n  render() {\n    const isLoading = !!(this.state.options.length > 0) ? false : true;\n\n    const {questionText,questionNumber,options} = this.state;\n    const {l10n} = this.props;\n    const optionsForSelect = options.map(opt => {\n      return {'value': opt, 'label': l10n(opt)};\n    });\n\n    const customStyles = {\n      control: styles => ({ ...styles, backgroundColor: 'white' }),\n      option: function(styles, { data, isDisabled, isFocused, isSelected }) {\n        return {\n          ...styles,\n          maxWidth: 450\n        }\n      }\n    }\n\n    return (isLoading\n      ? <div></div>\n      : <div className=\"OptionsQuestion\">\n          <p className=\"QuestionText\">{l10n(\"Question\")} {l10n(questionNumber)} - {l10n(questionText)}</p>\n\n          {/*}<select value={this.state.answer} onChange={this.handleChange.bind(this)}>\n            {options.map(o => {\n              return <option key={o} value={o}>{l10n(o)}</option>\n            })}\n          </select>*/}\n          <Select\n            value={this.state.answer}\n            onChange={this.handleChange.bind(this)}\n            options={optionsForSelect}\n            styles={customStyles}\n          />\n          <br />\n          <hr/>\n        </div>\n\n\n    );\n  }\n}\n\nOptionsQuestion.propTypes = {}\n\nOptionsQuestion.defaultProps = {}\n\nexport default OptionsQuestion\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { l10nMain, replaceMMNumbers } from '../localization';\nimport BarchartQuestion from './BarchartQuestion/BarchartQuestion';\nimport FreeTextQuestion from './FreeTextQuestion/FreeTextQuestion';\nimport OptionsQuestion from './OptionsQuestion/OptionsQuestion';\n\nclass AllQuestions extends React.Component {\n\trender() {\n\n    const {calcQuestionWidthFunc,questionWidthScaleFactor,width,l10n,submitAnswer} = this.props;\n    const calcQuestionWidth = () => calcQuestionWidthFunc(questionWidthScaleFactor,width)\n\n\t\treturn <div>\n      <FreeTextQuestion\n\t\t\t\tquestionNumber={\"1\"}\n\t\t\t\tquestionText=\"Full name\"\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\t\t\t<OptionsQuestion\n\t\tquestionNumber={2}\n\t\tquestionText=\"How old are you?\"\n\t\toptions={[\n\t\t\t\t\"17 or younger\",\n\t\t\t\"18-23\",\n\t\t\t\"24-29\",\n\t\t\t\"30-39\",\n\t\t\t\"40-49\",\n\t\t\t\"50 or older\"\n\t]}\n\t\tallowOther={false}\n\t\tquestionWidth={calcQuestionWidth()}\n\t\tl10n={l10n}\n\t\tsubmit={submitAnswer}\n\t\t/>\n\t\t\t<FreeTextQuestion\n\t\t\t\tquestionNumber={3}\n\t\t\t\tquestionText=\"Where are you from?\"\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\n\t\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={4}\n\t\t\t\tquestionText=\"What is your Sex?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"Male\",\n\t\t\t\t\t\"Female\",\n\t\t\t\t\t\"Prefer not to answer\"\n\t\t\t\t]}\n\t\t\t\tallowOther={false}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={5}\n\t\t\t\tquestionText=\"What is your Marital Status?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"Married or living together\",\n\t\t\t\t\t\"Divorced/separated\",\n\t\t\t\t\t\"Widowed\",\n\t\t\t\t\t\"Never married and never lived together\",\n\t\t\t\t\t\"In relationship\",\n\t\t\t\t\t\"Prefer not to answer\"\n\t\t\t\t]}\n\t\t\t\tallowOther={false}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\t\t\t<OptionsQuestion\n\t\tquestionNumber={6}\n\t\tquestionText=\"What was your activity status during the last 12 months?\"\n\t\toptions={[\n\t\t\t\t\"1 - employee (government)\",\n\t\t\t\"2 - employee (private, org)\",\n\t\t\t\"3 - employer\",\n\t\t\t\"4 - own account worker\",\n\t\t\t\"5 - contributing family worker\",\n\t\t\t\"6 - sought work\",\n\t\t\t\"7 - did not seek work\",\n\t\t\t\"8 - full-time student\",\n\t\t\t\"9 - household work\",\n\t\t\t\"10 - pensioner, retired, elderly person\",\n\t\t\t\"11 - ill, disabled\",\n\t\t\t\"12 - other\",\n\t\t\t\"Did not answer\"\n\t]}\n\t\tallowOther={true}\n\t\tquestionWidth={calcQuestionWidth()}\n\t\tl10n={l10n}\n\t\tsubmit={submitAnswer}\n\t\t/>\n\n\t\t\t<FreeTextQuestion\n\t\t\t\tquestionNumber={7}\n\t\t\t\tquestionText=\"What is your ethnicity?\"\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={8}\n\t\t\t\tquestionText=\"What is your religion?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"Buddhist\",\n\t\t\t\t\t\"Christian\",\n\t\t\t\t\t\"Muslim\",\n\t\t\t\t\t\"Hindu\",\n\t\t\t\t\t\"Animist\",\n\t\t\t\t\t\"Other religion\",\n\t\t\t\t\t\"No religion\",\n\t\t\t\t\t\"Did not answer\"\n\t\t\t\t]}\n\t\t\t\tallowOther={true}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<BarchartQuestion\n\t\tquestionNumber={9}\n\t\tquestionText=\"Allocate percentage of your days a week you eat food from each of the following sources\"\n\t\toptions={[\n\t\t\t\t{id:1,optionText:\"Delivered food\",points:20,type:\"percent\"},\n\t\t{id:2,optionText:\"Eat out\",points:40,type:\"percent\"},\n\t\t{id:3,optionText:\"Food cooked by my family\",points:30,type:\"percent\"},\n\t\t\t{id:4,optionText:\"Food cooked by me or my roommates\",points:10,type:\"percent\"},\n\t\t]}\n\t\tquestionWidth={calcQuestionWidth()}\n\t\tl10n={l10n}\n\t\tsubmit={submitAnswer}\n\t\t/>\n\n\t\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={10}\n\t\t\t\tquestionText=\"When eating out, what's the average amount you spend on each meal (lunch or dinner excluding drink)?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"Less than 100NTD\",\n\t\t\t\t\t\"100-200NTD\",\n\t\t\t\t\t\"200-300NTD\",\n\t\t\t\t\t\"300-400NTD\",\n\t\t\t\t\t\"400-500NTD\",\n\t\t\t\t\t\"More than 500NTD\"\n\t\t\t\t]}\n\t\t\t\tallowOther={false}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={11}\n\t\t\t\tquestionText=\"When not eating homemade food, why would you prefer to eat out or have the food delivered to you (assuming the same price and quality in both cases)?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"I prefer food delivery because of its convenience.\",\n\t\t\t\t\t\"I prefer food delivery to save time.\",\n\t\t\t\t\t\"I prefer to go out to get away from study/work environment during lunch/dinner.\",\n\t\t\t\t\t\"I prefer to go out because I trust foods at restaurants more than delivered food.\",\n\t\t\t\t\t\"Prefer not to answer\"\n\t\t\t\t]}\n\t\t\t\tallowOther={false}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<BarchartQuestion\n\t\tquestionNumber={12}\n\t\tquestionText=\"Allocate the percentage when not eating homemade food, how important are the following factors when deciding your food provider for eating out or ordering to be delivered?\"\n\t\toptions={[\n\t\t\t\t{id:1,optionText:\"Quick Access\",points:20,type:\"percent\"},\n\t\t{id:2,optionText:\"Taste\",points:40,type:\"percent\"},\n\t\t{id:3,optionText:\"Quality/Health\",points:30,type:\"percent\"},\n\t\t{id:4,optionText:\"Price\",points:10,type:\"percent\"},\n\n\t]}\n\t\tquestionWidth={calcQuestionWidth()}\n\t\tl10n={l10n}\n\t\tsubmit={submitAnswer}\n\t\t/>\n\n\t\t<OptionsQuestion\n\t\t\t\tquestionNumber={13}\n\t\t\t\tquestionText=\" Imagine you are on-campus or at your housing and want to have food for lunch/dinner. You have two options=> Option1: Go to the cafe/restaurant to order and eat it there. => Option2: Order online (1-minute process) and use free delivery to your housing or an on-campus location close to you at a certain time. How often would you use each of these options?\"\n\t\t\t\toptions={[\n\t\t\t\t\t\"100% Option1, 0% Option2\",\n\t\t\t\t\t\"75% Option1, 25% Option2\",\n\t\t\t\t\t\"50% Option1, 50% Option2\",\n\t\t\t\t\t\"25% Option1, 75% Option2\",\n\t\t\t\t\t\"0% Option1, 100% Option2\"\n\t\t\t\t]}\n\t\t\t\tallowOther={false}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t<BarchartQuestion\n\t\t\t\tquestionNumber={14}\n\t\t\t\tquestionText=\"Allocate the percentage how much do you like each of these food categories?s\"\n\t\t\t\toptions={[\n\t\t\t\t\t{id:1,optionText:\"Vegetarian food\",points:8,type:\"percent\"},\n\t\t\t\t\t{id:2,optionText:\"local food\",points:20,type:\"percent\"},\n\t\t\t\t\t{id:3,optionText:\"Sandwiches\",points:10,type:\"percent\"},\n\t\t\t\t\t{id:4,optionText:\"Mexican food\",points:5,type:\"percent\"},\n\t\t\t\t\t{id:5,optionText:\"American food\",points:20,type:\"percent\"}\n\t\t\t\t]}\n\t\t\t\tquestionWidth={calcQuestionWidth()}\n\t\t\t\tl10n={l10n}\n\t\t\t\tsubmit={submitAnswer}\n\t\t\t/>\n\n\t\t\t<FreeTextQuestion\n\t\tquestionNumber={15}\n\t\tquestionText=\"If interested to get a discount coupon for your time spent, you can add your email address below, otherwise click Submit:\"\n\t\tquestionWidth={calcQuestionWidth()}\n\t\tl10n={l10n}\n\t\tsubmit={submitAnswer}\n\t\t/>\n\n\n\t\t</div>\n\n\t}\n}\n\nexport default AllQuestions","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport './App.css';\nimport { l10nMain, replaceMMNumbers } from './localization';\nimport firebase from './Firebase';\nimport * as moment from 'moment';\nimport Countdown from 'react-countdown-now';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport Rabbit from \"rabbit-node\";\nimport AllQuestions from './components/Questions';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    firebase.firestore().enablePersistence()\n      .catch(function(err) {\n          if (err.code == 'failed-precondition') {\n              // Multiple tabs open, persistence can only be enabled\n              // in one tab at a a time.\n              // ...\n              console.error(err);\n\t      console.log('failed-precondition');\n          } else if (err.code == 'unimplemented') {\n              // The current browser does not support all of the\n              // features required to enable persistence\n              // ...\n              console.error(err);\n\t      console.log('unimplemented');\n          }\n      });\n\n    const SUBMISSION_COLLECTION = 'survey_2020';\n\n    this.ref = firebase.firestore().collection(SUBMISSION_COLLECTION);\n\n    this.unsubscribe = null;\n    this.state = {\n      dimensions: {\n\t\t\t\theight: window.innerHeight,\n\t\t\t\twidth: window.innerWidth\n      },\n      questionWidthScaleFactor: 0.9,\n      selectedLanguage: {\n        label:\"English\",\n        value:\"en\"\n      },\n      answers: {},\n      _startTime: '',\n      answering: false,\n      exportData: [],\n      queriedData: [],\n      queriedDataLastFetched: moment(),\n      queriedDataFromCache: false,\n      queriedDataPendingWrites: false,\n      firstLoad: true,\n      submitRetries: 0,\n      maxSubmitRetries: 5,\n      submitting: false,\n      pendingSubmissions: {},\n      submissionIds: [],\n      submissionsTotalToday: []\n    }\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  languageOptions = [\n    { value: 'en', label: 'English' },\n/*    { value: 'mm', label: 'Myanmar Unicode' },\n    { value: 'zg', label: 'Zawgyi'}*/\n  ]\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    // let currentData = [];\n    this.getDataForExport();\n    this.ref.onSnapshot({includeMetadataChanges: true}, snapshot => {\n      var returnData = snapshot.docs.map(doc => doc.data());\n      console.log(`changed data to length ${returnData.length} with ${snapshot.metadata.hasPendingWrites}`)\n      this.setState({\n        queriedData: returnData,\n        queriedDataFromCache: snapshot.metadata.fromCache,\n        queriedDataLastFetched: moment(),\n        queriedDataPendingWrites: snapshot.metadata.hasPendingWrites\n      });\n    });\n\n    //Code to transfer results\n    /*this.ref.orderBy(\"_startTime\", \"desc\").limit(15).get().then(\n      function(snapshot) {\n        snapshot.forEach(function(doc) {\n          firebase.firestore().collection('SUBMISSION_COLLECTION').add(doc.data()).then(\n            console.log(`Added ${doc.data()['_startTime']}`)\n          );\n          //doc.ref.delete();\n\n        })\n      }\n    );*/\n  }\n\n  getDataForExport = () => {\n    // let exportPromises;\n    let exportData = [];\n    this.ref.onSnapshot(d => {\n      Promise\n        .all(d.docs.map(doc => doc.data()))\n        .then(result => {\n          function checkDate(submission) {\n            var date = new Date(submission['_startTime']);\n            var dateMilli = date.getMilliseconds(); //in ms\n            var startOfDay = moment().startOf('day').format('x');\n            return date > startOfDay;\n          }\n          var submissionsToday = result.filter(checkDate);\n          this.setState({\n            exportData: result,\n            submissionsTotalToday: submissionsToday.length\n          })\n        })\n    });\n\n    return exportData;\n  }\n\n  afterCoolDown = () => {\n    // if (this.state.firstLoad) this.setState({firstLoad: false});\n    return <button\n        className=\"mdl-button mdl-js-button mdl-button--raised submitButton\"\n        disabled={!this.isButtonDisabled()}\n        onClick={this.startQuestionnare.bind(this)}\n      >{this.l10n(\"Start Questionnaire\")}</button>\n  }\n\n  renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return this.afterCoolDown();\n    } else {\n      // Render a countdown\n      return <div>\n          {this.l10n(\"Data submitted\")} <br/>\n          {replaceMMNumbers(seconds)} {this.l10n(\"seconds\")}\n        </div>;\n    }\n  };\n\n  l10n = (s) => l10nMain(s, this.state.selectedLanguage.value);\n\n  submitAnswer = (a) => {\n    let answers = this.state.answers;\n    const answerMMNumReplaced = typeof(a.answer) === 'string' ? replaceMMNumbers(a.answer) : a.answer;\n    answers[a.question] = {answer: answerMMNumReplaced, validAnswer: a.validAnswer};;\n    this.setState({\n      answers: answers\n    })\n    // console.log('answers: ', answers);\n\n    // this.getDataForExport();\n  }\n\n  calcQuestionWidth(questionWidthScaleFactor,width) {\n    // const maxWidth = this.state.dimensions.width\n    //   * this.state.questionWidthScaleFactor\n    //   - 20;\n    const maxWidth = width * questionWidthScaleFactor - 20;\n    return Math.min(400,maxWidth);\n  }\n\n  updateDimensions() {\n    this.setState({\n      dimensions: {\n\t\t\t\theight: window.innerHeight,\n\t\t\t\twidth: window.innerWidth\n\t\t\t}\n    });\n  }\n\n  handleLanguageChange = (selectedOption) => {\n    this.setState({ selectedLanguage: selectedOption });\n  }\n\n  isButtonDisabled = () => {\n    return Object.values(this.state.answers)\n      .map(d => d.validAnswer)\n      .reduce((isStillTrue, next) => isStillTrue && next,true);\n  }\n\n  getAnswersOnly = (answers) => {\n    const questions = Object.keys(answers);\n    let newAnswers = {};\n    questions.forEach(q => {\n      if (typeof(answers[q].answer) === 'object') {\n        answers[q].answer.forEach(d => {\n          newAnswers[q+\"~\"+d.optionText] = d.points.toString();\n        })\n      } else {\n        newAnswers[q] = answers[q].answer.toString();\n      }\n    });\n    return newAnswers;\n  }\n\n  submitQuestionnare = () => {\n    // Build submission\n    let submission = {\n      ...this.getAnswersOnly(this.state.answers),\n      _startTime: new Date(this.state._startTime.format()),\n      _startTimeString: this.state._startTime.format(),\n      _submitTime: new Date(moment().format()),\n      _submitTimeString: moment().format(),\n      _appLastUpdated: '23-May-2021'\n    };\n\n    // Change state of app\n    // and record pending submission\n    let updatePendingSubmissions =  this.state.pendingSubmissions;\n    let submissionKey = submission._startTime.toString();\n    updatePendingSubmissions[submissionKey] = submission;\n    this.setState({\n      answering: false,\n      pendingSubmissions: updatePendingSubmissions\n    });\n\n    console.log(`adding ${submissionKey}`);\n\n    // // Add submission to backend. To add listeners here\n    this.ref.add(submission)\n     .then( (docRef) => {\n       // if write successful, change state\n       docRef.get().then((doc) => {\n         let updatePendingSubmissions = this.state.pendingSubmissions;\n        let updateSubmissionIds = this.state.submissionIds;\n\n        let startTimeOfSubmission = doc.data()._startTime;\n         let submissionKey = startTimeOfSubmission.toDate().toString();\n         delete updatePendingSubmissions[submissionKey];\n         updateSubmissionIds.push(submissionKey);\n         console.log(`Synced ${startTimeOfSubmission}`);\n        this.setState({\n         pendingSubmissions: updatePendingSubmissions,\n          submissionIds: updateSubmissionIds\n         });\n         alert(`Submitted response from ${submissionKey}`);\n       });\n     })\n     .catch((error) => {\n       console.error(`Error adding document: ${error}\\n`);\n     });\n    console.log(this.state.pendingSubmissions);\n/*\n    window.ReactNativeWebView.postMessage(JSON.stringify(submission));\n*/\n    console.log(JSON.stringify(submission));\n\n  }\n\n  startQuestionnare = () => {\n    this.setState({\n      _startTime: moment(),\n      answering: true,\n      firstLoad: false\n    });\n  }\n\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"mdl-layout__header App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          {/*<Helmet>\n            <link href=\"https://fonts.googleapis.com/css?family=Padauk&display=swap\" rel=\"stylesheet\"></link>\n          </Helmet>*/}\n          <span className=\"mdl-layout-title\">\n            CCB Survey Application\n          </span>\n        </header>\n        <div className=\"mdl-layout__content App-body\">\n\n        <label className='pickerWrapper'>\n          中文/English:\n          <Select\n            value={this.state.selectedLanguage}\n            onChange={this.handleLanguageChange}\n            options={this.languageOptions}\n            className='picker'\n          />\n        </label>\n\n        <br/>\n          {\n            this.state.answering\n            ? <div>\n              <span className=\"mdl-chip\">\n                  <span className=\"mdl-chip__text\">\n                    {this.l10n(\"This survey started at\")} {this.state._startTime.format(\"DD MMM YYYY hh:mm:ss A\")}\n                  </span>\n              </span>\n              <hr/>\n              \n              <AllQuestions \n                calcQuestionWidthFunc={this.calcQuestionWidth}\n                questionWidthScaleFactor={this.state.questionWidthScaleFactor}\n                width={this.state.dimensions.width}\n                l10n={this.l10n}\n                submitAnswer={this.submitAnswer}\n              />\n\n              <button\n                className=\"mdl-button mdl-js-button mdl-button--raised submitButton\"\n                disabled={!this.isButtonDisabled()}\n                onClick={this.submitQuestionnare.bind(this)}\n              >{this.l10n(\"Submit Questionnaire\")}</button>\n            </div>\n          : <div>\n              { this.state.firstLoad\n                ? this.afterCoolDown()\n                //TODO: set back to 10 s (more like 10000ms)\n                : //TODO: REMOVE THIS COMMENTED OUT LINE <Countdown date={Date.now() + 1000} renderer={this.renderer}/>\n                this.afterCoolDown()\n              }\n          </div>\n\n          }\n          <br/>\n\n          {/* <div className=\"surveyStatus\">\n            <div className=\"singleStatus\">\n              <span className='mdl-chip mdl-color--green mdl-color-text--white'>\n                <span className='mdl-chip__text'>\n                  {this.l10n(\"Submitted total today\")} : <strong>{this.state.submissionsTotalToday - Object.keys(this.state.pendingSubmissions).length}</strong>\n                </span>\n              </span>\n            </div>\n            <div className=\"singleStatus\">\n              <span className='mdl-chip mdl-color--orange mdl-color-text--white'>\n                <span className='mdl-chip__text'>\n                  {this.l10n(\"Pending\")} : <strong>{Object.keys(this.state.pendingSubmissions).length}</strong>\n                </span>\n              </span>\n            </div>\n          </div> */}\n          <div className=\"singleStatus\">\n            <span className='mdl-chip'>\n              <span className='mdl-chip__text'>\n                {this.l10n(\"Submitted total all time\")} : <strong>{this.state.queriedData.length}</strong>\n              </span>\n            </span>\n          </div>\n\n          <div className=\"downloadLink\">\n            {this.state.queriedData.length > 0 ?\n              <CSVLink className=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\"\n              filename={`migs_data_fetched_on${this.state.queriedDataLastFetched.format('MMMM Do YYYY, h.mm a')}.csv`}\n              data={this.state.queriedData}\n              onClick={()=>{alert(`Downloading ${this.state.queriedData.length} rows${this.state.queriedDataPendingWrites ? ' (including pending entries)': ''} last retrieved from the database on ${this.state.queriedDataLastFetched.format('MMMM Do YYYY, h.mm a')}.`)}}>Download all results</CSVLink>\n\n              : null\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}